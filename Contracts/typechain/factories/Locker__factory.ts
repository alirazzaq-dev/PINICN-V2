/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Locker, LockerInterface } from "../Locker";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockerID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
    ],
    name: "Unlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
    ],
    name: "addTokenstoALocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_additionTime",
        type: "uint256",
      },
    ],
    name: "increaseLocktime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
    ],
    name: "unlockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f6b38038062000f6b8339818101604052810190620000379190620002e2565b6200006b7f56cc0a8a6da60ffceb213b45d0e1cd1f62d9f850d6a7dda584fdf6bc77c3624160001b6200029a60201b60201c565b6200009f7fe6b975119c9c8764fd468cf820eb78f7c9e18a0da2d34cbe641925e73d16762d60001b6200029a60201b60201c565b620000d37f35a539090edfc583bb183cbc411e3345ea33cb7547fd1fe526423db9704ce5a560001b6200029a60201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001477f17b72d8a3f63a9f51a84606a46a62bfc4837444abee7b930192311c9ffa6813b60001b6200029a60201b60201c565b6200017b7fdc28b78d7ae920349586efcabdc4d7b08c29efeed28591262345ab722ec1fd1d60001b6200029a60201b60201c565b6040518060c001604052808681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020018281525060016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050155905050505050505062000404565b50565b600081519050620002ae81620003b6565b92915050565b600081519050620002c581620003d0565b92915050565b600081519050620002dc81620003ea565b92915050565b600080600080600060a08688031215620002fb57600080fd5b60006200030b88828901620002cb565b95505060206200031e888289016200029d565b94505060406200033188828901620002b4565b93505060606200034488828901620002cb565b92505060806200035788828901620002cb565b9150509295509295909350565b600062000371826200038c565b9050919050565b6000620003858262000364565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003c18162000364565b8114620003cd57600080fd5b50565b620003db8162000378565b8114620003e757600080fd5b50565b620003f581620003ac565b81146200040157600080fd5b50565b610b5780620004146000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806360e9fec6146100465780637c40532514610062578063efda3cc51461007e575b600080fd5b610060600480360381019061005b9190610905565b61009a565b005b61007c60048036038101906100779190610905565b6102d8565b005b61009860048036038101906100939190610905565b610645565b005b6100c67fbc036175fc5b643a15088099d7fb1967a09dface45912c4cc3cc2915352202d760001b610883565b6100f27fef93fbd4a1e0d7333cb029fb532c11a1e0ab33a06fbe00e68e948904e6e40d8260001b610883565b61011e7ffe1e90c2c5de15ae42aad9dffd975c381cc22aa9064701ab60080c56c0dd8c3c60001b610883565b61014a7ff142cda354a9203526952b0b3ed47ee59109cca1b8d5d1aac33fc30493d3775c60001b610883565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf90610998565b60405180910390fd5b6102047fab63ddb22660c22c379a25b48e12a2b007be5686bd0675e002448bc7d0f6fdc660001b610883565b6102307f9102451f390250e5cb78b07a34c51501f2a32c96d6083a93deec55bf56a831ae60001b610883565b61025c7f5d9ae6b25cca5c54392a10c1b5a653dda7389579652d5c7e01290c19d74b05ff60001b610883565b6102887f1db02c676526bc2d6c7a5bf5b5bfc3bd0729334fbd2c84ca298ecca2c529c5df60001b610883565b6102b47f302f3875c311b204a885717b5dbf665fd4e7bb00e1c33354314b83cb5f1c5e1460001b610883565b6102cc8160016005015461088690919063ffffffff16565b60016005018190555050565b6103047fbc036175fc5b643a15088099d7fb1967a09dface45912c4cc3cc2915352202d760001b610883565b6103307fef93fbd4a1e0d7333cb029fb532c11a1e0ab33a06fbe00e68e948904e6e40d8260001b610883565b61035c7ffe1e90c2c5de15ae42aad9dffd975c381cc22aa9064701ab60080c56c0dd8c3c60001b610883565b6103887ff142cda354a9203526952b0b3ed47ee59109cca1b8d5d1aac33fc30493d3775c60001b610883565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610998565b60405180910390fd5b6104427fab63ddb22660c22c379a25b48e12a2b007be5686bd0675e002448bc7d0f6fdc660001b610883565b61046e7f9102451f390250e5cb78b07a34c51501f2a32c96d6083a93deec55bf56a831ae60001b610883565b61049a7f4acd97e440ef23406f006ed9be1e7e15317c289b1926d204ccd572dabf0f243e60001b610883565b6104c67ffea4f45cbb8ab4d82cccdd83288487178bf303e9fc77238f4cb17a0aa5cb5c6e60001b610883565b6104f27f2c0c25b88259de292b108adac118ec2256658fadca3d9a99c7be6f13633daae060001b610883565b61050a8160016003015461089c90919063ffffffff16565b60016003018190555061053f7f32beda0f5c8d5656ec8c5a9e9f1bfdb4fadffffc56d83746da4d38a8a03a0e0560001b610883565b61056b7fb5dcb8ef3a2b663a0ccdf3a022eb10bbc97957347988c4b8ea031609819f44b260001b610883565b600160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6001800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016105ef92919061096f565b602060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064191906108dc565b5050565b6106717fbc036175fc5b643a15088099d7fb1967a09dface45912c4cc3cc2915352202d760001b610883565b61069d7fef93fbd4a1e0d7333cb029fb532c11a1e0ab33a06fbe00e68e948904e6e40d8260001b610883565b6106c97ffe1e90c2c5de15ae42aad9dffd975c381cc22aa9064701ab60080c56c0dd8c3c60001b610883565b6106f57ff142cda354a9203526952b0b3ed47ee59109cca1b8d5d1aac33fc30493d3775c60001b610883565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90610998565b60405180910390fd5b6107af7fab63ddb22660c22c379a25b48e12a2b007be5686bd0675e002448bc7d0f6fdc660001b610883565b6107db7f9102451f390250e5cb78b07a34c51501f2a32c96d6083a93deec55bf56a831ae60001b610883565b6108077f12725d291363772e10c3a447aa49837784a2b75ee596c2ba8fea6f95c4effe8a60001b610883565b6108337fbdd49e4a6f5ca4d1b1f1bc5098a2c384d760f2ab9aa484cecb5a02e78650f4af60001b610883565b61085f7f7cbce4ec207cf486d43c38378df9d5bf403f73626032b95dedaf0a0084cafcaf60001b610883565b6108778160016003015461088690919063ffffffff16565b60016003018190555050565b50565b6000818361089491906109c9565b905092915050565b600081836108aa9190610a1f565b905092915050565b6000815190506108c181610af3565b92915050565b6000813590506108d681610b0a565b92915050565b6000602082840312156108ee57600080fd5b60006108fc848285016108b2565b91505092915050565b60006020828403121561091757600080fd5b6000610925848285016108c7565b91505092915050565b61093781610a53565b82525050565b600061094a601f836109b8565b915061095582610aca565b602082019050919050565b61096981610a91565b82525050565b6000604082019050610984600083018561092e565b6109916020830184610960565b9392505050565b600060208201905081810360008301526109b18161093d565b9050919050565b600082825260208201905092915050565b60006109d482610a91565b91506109df83610a91565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1457610a13610a9b565b5b828201905092915050565b6000610a2a82610a91565b9150610a3583610a91565b925082821015610a4857610a47610a9b565b5b828203905092915050565b6000610a5e82610a71565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f6e6c79206d617374657220697320616c6c6f77656420746f2063616c6c2e00600082015250565b610afc81610a65565b8114610b0757600080fd5b50565b610b1381610a91565b8114610b1e57600080fd5b5056fea264697066735822122062e85a545446d8f8a2816d73d91ab76ccb7ce527f16d27f05c1eb9c6338d9c7b64736f6c63430008040033";

export class Locker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Locker> {
    return super.deploy(
      _lockerID,
      _owner,
      _token,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    ) as Promise<Locker>;
  }
  getDeployTransaction(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lockerID,
      _owner,
      _token,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    );
  }
  attach(address: string): Locker {
    return super.attach(address) as Locker;
  }
  connect(signer: Signer): Locker__factory {
    return super.connect(signer) as Locker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockerInterface {
    return new utils.Interface(_abi) as LockerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Locker {
    return new Contract(address, _abi, signerOrProvider) as Locker;
  }
}
