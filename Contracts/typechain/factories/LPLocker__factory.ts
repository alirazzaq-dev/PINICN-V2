/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LPLocker, LPLockerInterface } from "../LPLocker";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockerID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "unlockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161036838038061036883398101604081905261002f9161012b565b6040518060e00160405280868152602001856001600160a01b03168152602001846001600160a01b03168152602001838152602001428152602001828152602001600060018111156100835761008361017a565b9052805160009081556020820151600180546001600160a01b039283166001600160a01b0319918216178255604085015160028054919094169116179091556060830151600355608083015160045560a083015160055560c0830151600680549192909160ff19169083818111156100fd576100fd61017a565b02179055509050505050505050610190565b80516001600160a01b038116811461012657600080fd5b919050565b600080600080600060a0868803121561014357600080fd5b855194506101536020870161010f565b93506101616040870161010f565b6060870151608090970151959894975095949392505050565b634e487b7160e01b600052602160045260246000fd5b6101c98061019f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f968f49314610030575b600080fd5b61003861003a565b005b6001546001600160a01b0316331461006d5760405162461bcd60e51b81526004016100649061015c565b60405180910390fd5b6001546001600160a01b031633146100975760405162461bcd60e51b81526004016100649061015c565b60025460015460035460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb90604401602060405180830381600087803b1580156100eb57600080fd5b505af11580156100ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101239190610133565b506006805460ff19166001179055565b60006020828403121561014557600080fd5b8151801515811461015557600080fd5b9392505050565b6020808252601d908201527f4f6e6c79206c6f636b6572206f6e77657220697320616c6c6f7765642e00000060408201526060019056fea2646970667358221220d1a37966ea7678d052337731fdcf8efc0197f38a072462dd302936b53cf22c3c64736f6c63430008070033";

export class LPLocker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPLocker> {
    return super.deploy(
      _lockerID,
      _owner,
      _token,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    ) as Promise<LPLocker>;
  }
  getDeployTransaction(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lockerID,
      _owner,
      _token,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    );
  }
  attach(address: string): LPLocker {
    return super.attach(address) as LPLocker;
  }
  connect(signer: Signer): LPLocker__factory {
    return super.connect(signer) as LPLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPLockerInterface {
    return new utils.Interface(_abi) as LPLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPLocker {
    return new Contract(address, _abi, signerOrProvider) as LPLocker;
  }
}
