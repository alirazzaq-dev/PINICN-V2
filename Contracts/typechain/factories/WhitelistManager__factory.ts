/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WhitelistManager,
  WhitelistManagerInterface,
} from "../WhitelistManager";

const _abi = [
  {
    inputs: [],
    name: "getWhiteListUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhiteListUsersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isWhiteListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "removeWhiteListUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "whiteListUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105c1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063243bae521461005c578063475fda0e1461007a5780635d7d8ab81461008f5780636f9170f6146100a5578063b96f2120146100c8575b600080fd5b6100646100db565b60405161007191906104e0565b60405180910390f35b61008d610088366004610419565b6100ec565b005b610097610141565b604051908152602001610071565b6100b86100b33660046103ff565b61014d565b6040519015158152602001610071565b61008d6100d6366004610419565b610160565b60606100e760006101b1565b905090565b60005b815181101561013d5761012a600083838151811061011d57634e487b7160e01b600052603260045260246000fd5b60200260200101516101c5565b508061013581610544565b9150506100ef565b5050565b60006100e760006101da565b600061015a6000836101e4565b92915050565b60005b815181101561013d5761019e600083838151811061019157634e487b7160e01b600052603260045260246000fd5b6020026020010151610206565b50806101a981610544565b915050610163565b606060006101be8361021b565b9392505050565b60006101be836001600160a01b038416610277565b600061015a825490565b6001600160a01b038116600090815260018301602052604081205415156101be565b60006101be836001600160a01b0384166102c6565b60608160000180548060200260200160405190810160405280929190818152602001828054801561026b57602002820191906000526020600020905b815481526020019060010190808311610257575b50505050509050919050565b60008181526001830160205260408120546102be5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561015a565b50600061015a565b600081815260018301602052604081205480156103d95760006102ea60018361052d565b85549091506000906102fe9060019061052d565b905081811461037f57600086600001828154811061032c57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061035d57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061039e57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061015a565b600091505061015a565b80356001600160a01b03811681146103fa57600080fd5b919050565b600060208284031215610410578081fd5b6101be826103e3565b6000602080838503121561042b578182fd5b823567ffffffffffffffff80821115610442578384fd5b818501915085601f830112610455578384fd5b81358181111561046757610467610575565b8060051b604051601f19603f8301168101818110858211171561048c5761048c610575565b604052828152858101935084860182860187018a10156104aa578788fd5b8795505b838610156104d3576104bf816103e3565b8552600195909501949386019386016104ae565b5098975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105215783516001600160a01b0316835292840192918401916001016104fc565b50909695505050505050565b60008282101561053f5761053f61055f565b500390565b60006000198214156105585761055861055f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212203886fe72e5f141e0000760fc668aa393bf08cb96ded72995bdfb1b07006ab68264736f6c63430008040033";

export class WhitelistManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WhitelistManager> {
    return super.deploy(overrides || {}) as Promise<WhitelistManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WhitelistManager {
    return super.attach(address) as WhitelistManager;
  }
  connect(signer: Signer): WhitelistManager__factory {
    return super.connect(signer) as WhitelistManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistManagerInterface {
    return new utils.Interface(_abi) as WhitelistManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistManager {
    return new Contract(address, _abi, signerOrProvider) as WhitelistManager;
  }
}
