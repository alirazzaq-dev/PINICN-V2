/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Locker, LockerInterface } from "../Locker";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockerID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
    ],
    name: "Unlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
    ],
    name: "addTokenstoALocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_additionTime",
        type: "uint256",
      },
    ],
    name: "increaseLocktime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
    ],
    name: "unlockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161040138038061040183398101604081905261002f916100b1565b600080546001600160a01b031990811633179091556040805160c0810182528781526001600160a01b03968716602082018190529590961690860181905260608601849052426080870181905260a09096018390526001969096556002805482169094179093556003805490931690941790915560045560055560065561011c565b600080600080600060a086880312156100c8578081fd5b8551945060208601516100da81610104565b60408701519094506100eb81610104565b6060870151608090970151959894975095949392505050565b6001600160a01b038116811461011957600080fd5b50565b6102d68061012b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806360e9fec6146100465780637c4053251461005b578063efda3cc51461006e575b600080fd5b61005961005436600461020c565b610081565b005b61005961006936600461020c565b6100c7565b61005961007c36600461020c565b610190565b6000546001600160a01b031633146100b45760405162461bcd60e51b81526004016100ab90610224565b60405180910390fd5b6006546100c190826101cd565b60065550565b6000546001600160a01b031633146100f15760405162461bcd60e51b81526004016100ab90610224565b6004546100fe90826101e0565b600490815560035460025460405163a9059cbb60e01b81526001600160a01b039182169381019390935260248301849052169063a9059cbb90604401602060405180830381600087803b15801561015457600080fd5b505af1158015610168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018c91906101ec565b5050565b6000546001600160a01b031633146101ba5760405162461bcd60e51b81526004016100ab90610224565b6004546101c790826101cd565b60045550565b60006101d9828461025b565b9392505050565b60006101d98284610273565b6000602082840312156101fd578081fd5b815180151581146101d9578182fd5b60006020828403121561021d578081fd5b5035919050565b6020808252601f908201527f4f6e6c79206d617374657220697320616c6c6f77656420746f2063616c6c2e00604082015260600190565b6000821982111561026e5761026e61028a565b500190565b6000828210156102855761028561028a565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a5e646bccbc801945e91f2f948ea27915c66b27e9cfcd19eccb5291117f47f2564736f6c63430008040033";

export class Locker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Locker> {
    return super.deploy(
      _lockerID,
      _owner,
      _token,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    ) as Promise<Locker>;
  }
  getDeployTransaction(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lockerID,
      _owner,
      _token,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    );
  }
  attach(address: string): Locker {
    return super.attach(address) as Locker;
  }
  connect(signer: Signer): Locker__factory {
    return super.connect(signer) as Locker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockerInterface {
    return new utils.Interface(_abi) as LockerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Locker {
    return new Contract(address, _abi, signerOrProvider) as Locker;
  }
}
