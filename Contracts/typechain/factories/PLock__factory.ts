/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PLock, PLockInterface } from "../PLock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockerID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
    ],
    name: "Unlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
    ],
    name: "addTokenstoALocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_additionTime",
        type: "uint256",
      },
    ],
    name: "increaseLocktime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfTokens",
        type: "uint256",
      },
    ],
    name: "unlockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106ff3803806106ff83398101604081905261002f91610284565b600080546001600160a01b03191633179055604080516101008101825288815260208082018790529181018590526001600160a01b0388811660608301528716608082015260a081018490524260c082015260e0810183905260018981558651919290916100a39160029190890190610127565b50604082015180516100bf916002840191602090910190610127565b5060608201516003820180546001600160a01b039283166001600160a01b031991821617909155608084015160048401805491909316911617905560a0820151600582015560c0820151600682015560e0909101516007909101555061037495505050505050565b82805461013390610323565b90600052602060002090601f016020900481019282610155576000855561019b565b82601f1061016e57805160ff191683800117855561019b565b8280016001018555821561019b579182015b8281111561019b578251825591602001919060010190610180565b506101a79291506101ab565b5090565b5b808211156101a757600081556001016101ac565b80516001600160a01b03811681146101d757600080fd5b919050565b600082601f8301126101ec578081fd5b81516001600160401b03808211156102065761020661035e565b604051601f8301601f19908116603f0116810190828211818310171561022e5761022e61035e565b81604052838152602092508683858801011115610249578485fd5b8491505b8382101561026a578582018301518183018401529082019061024d565b8382111561027a57848385830101525b9695505050505050565b600080600080600080600060e0888a03121561029e578283fd5b875196506102ae602089016101c0565b95506102bc604089016101c0565b60608901519095506001600160401b03808211156102d8578485fd5b6102e48b838c016101dc565b955060808a01519150808211156102f9578485fd5b506103068a828b016101dc565b93505060a0880151915060c0880151905092959891949750929550565b600181811c9082168061033757607f821691505b6020821081141561035857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61037c806103836000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806360e9fec6146100465780637c4053251461005b578063efda3cc51461006e575b600080fd5b6100596100543660046102b2565b610081565b005b6100596100693660046102b2565b610126565b61005961007c3660046102b2565b6101f0565b6000546001600160a01b031633146100b45760405162461bcd60e51b81526004016100ab906102ca565b60405180910390fd5b600081116101135760405162461bcd60e51b815260206004820152602660248201527f4164646974696f6e2074696d652073686f756c64206265206d6f7265207468616044820152656e207a65726f60d01b60648201526084016100ab565b6008546101209082610273565b60085550565b6000546001600160a01b031633146101505760405162461bcd60e51b81526004016100ab906102ca565b6005546004805460405163a9059cbb60e01b81526001600160a01b0391821692810192909252602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156101a457600080fd5b505af11580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc9190610292565b506006546101ea9082610286565b60065550565b6000546001600160a01b0316331461021a5760405162461bcd60e51b81526004016100ab906102ca565b6000811161026a5760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e732073686f756c64206265206d6f7265207468616e207a65726f0060448201526064016100ab565b6006546101ea90825b600061027f8284610301565b9392505050565b600061027f8284610319565b6000602082840312156102a3578081fd5b8151801515811461027f578182fd5b6000602082840312156102c3578081fd5b5035919050565b6020808252601f908201527f4f6e6c79206d617374657220697320616c6c6f77656420746f2063616c6c2e00604082015260600190565b6000821982111561031457610314610330565b500190565b60008282101561032b5761032b610330565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d93c5de13747b6585d3821e32610350180faedb2b382f574863f468a25855d3e64736f6c63430008040033";

export class PLock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _name: string,
    _symbol: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PLock> {
    return super.deploy(
      _lockerID,
      _owner,
      _token,
      _name,
      _symbol,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    ) as Promise<PLock>;
  }
  getDeployTransaction(
    _lockerID: BigNumberish,
    _owner: string,
    _token: string,
    _name: string,
    _symbol: string,
    _numOfTokens: BigNumberish,
    _unlockTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lockerID,
      _owner,
      _token,
      _name,
      _symbol,
      _numOfTokens,
      _unlockTime,
      overrides || {}
    );
  }
  attach(address: string): PLock {
    return super.attach(address) as PLock;
  }
  connect(signer: Signer): PLock__factory {
    return super.connect(signer) as PLock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PLockInterface {
    return new utils.Interface(_abi) as PLockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PLock {
    return new Contract(address, _abi, signerOrProvider) as PLock;
  }
}
